package {{.GoPackageName}}

import (
    "errors"
    "google.golang.org/protobuf/types/known/anypb"

    "github.com/smartcontractkit/cre-sdk-go/sdk"
    sdkpb "github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk/v2/pb"

    {{- range .Services }}
        {{- range .Methods }} {{- if not (MapToUntypedAPI .) }}
            {{- addImport .Input.GoIdent.GoImportPath $.GoImportPath.String }}
            {{- addImport .Output.GoIdent.GoImportPath $.GoImportPath.String }}
        {{- end }} {{- end }}
    {{- end }}

    {{- range allimports }}
    {{.}}
    {{- end }}
)

{{- range .Services}}
{{ $service := . }}
{{ if .Comments.Leading.String }}//{{.GoName}}Capability {{CleanComments .Comments.Leading.String}} {{ end }}
type {{.GoName}} struct {
    {{- range Labels . }}
    {{.Name}} {{.Type}}
    {{- end }}
    // TODO: https://smartcontract-it.atlassian.net/browse/CAPPL-799 allow defaults for capabilities
}

    {{- range .Methods}} {{- if not (MapToUntypedAPI .) }}
    {{- $args := dict
        "Service" $service
        "Method" .
        "CapabilityId" (CapabilityId $service)
        "Mode" (Mode $service)
        "InputType" .Input.GoIdent
        "OutputType" .Output.GoIdent
        "GoPackageName" $.GoImportPath.String
    }}
        {{- if isTrigger . }}
            {{template "trigger_method" $args}}
        {{- else }}
            {{template "action_method" $args}}
        {{- end }}
    {{- end }}
{{- end }}

{{- range Labels . }}
    {{- range $name, $value:= .DefaultValues }}
        const {{ SafeGoName $name }} = {{ $value }}
    {{ end }}
    {{ if (and .DefaultValues (ne .Type "string"))}}
       func {{.Name}}FromName(name string) ({{.Type}}, error) {
            switch name {
            {{- range $name, $value := .DefaultValues }}
                case "{{ $name }}":
                    return {{ SafeGoName $name }}, nil
            {{- end }}
            default:
                return 0, errors.New("unknown {{.Name}}" + name)
            }
        }
    {{- end }}
{{- end }}

{{- end }}